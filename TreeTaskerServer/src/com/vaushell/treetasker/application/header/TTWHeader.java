package com.vaushell.treetasker.application.header;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.MenuBar.MenuItem;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Window.Notification;
import com.vaushell.treetasker.application.TreeTaskerWebApplicationController;

public class TTWHeader
    extends CustomComponent
{

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout loggedLayout;
	@AutoGenerated
	private MenuBar vMNBmenu;
	@AutoGenerated
	private HorizontalLayout loginLayout;
	@AutoGenerated
	private Button vBTlogin;
	@AutoGenerated
	private PasswordField vTFpasswordValue;
	@AutoGenerated
	private TextField vTFuserNameValue;
	@AutoGenerated
	private Button vBTregister;
	@AutoGenerated
	private Label vLBLtitle;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private TreeTaskerWebApplicationController	controller;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public TTWHeader( TreeTaskerWebApplicationController controller )
	{
		buildMainLayout();
		setCompositionRoot( mainLayout );

		this.controller = controller;
		init();
		mainLayout.removeComponent( loggedLayout );
	}

	private void init()
	{
		// Login
		vBTlogin.addListener( new Button.ClickListener()
		{

			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			public void buttonClick( ClickEvent event )
			{
				if ( controller.login( (String) vTFuserNameValue.getValue(),
				                       (String) vTFpasswordValue.getValue() ) )
				{
					controller.showUserWindow();
				}
				else
				{
					controller.getUserWindow()
					          .showNotification( "E-mail ou mot de passe incorrect",
					                             "",
					                             Notification.TYPE_ERROR_MESSAGE );
				}

			}
		} );
		//Register
		vBTregister.setStyleName(Button.STYLE_LINK );
		vBTregister.addListener(new Button.ClickListener() {

			private static final long serialVersionUID = 1L;
			@Override
			public void buttonClick(ClickEvent event) {
				controller.queryRegistration();
			}
		});
	}

	public void setUserView()
	{
		mainLayout.removeComponent( loginLayout );
		mainLayout.addComponent( loggedLayout );
		mainLayout.setExpandRatio( loggedLayout, 1.0f );

		// Logout menu
		vMNBmenu.removeItems();
		MenuItem item = vMNBmenu.addItem( ((String) vTFuserNameValue.getValue()).toLowerCase(),
		                                  new ThemeResource(
		                                                     "icons/down_arrow.png" ),
		                                  null );
		item.addItem( "Déconnexion", new MenuBar.Command()
		{
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			public void menuSelected( MenuItem selectedItem )
			{
				controller.getApplication().close();
			}
		} );
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// vLBLtitle
		vLBLtitle = new Label();
		vLBLtitle.setStyleName("title");
		vLBLtitle.setImmediate(false);
		vLBLtitle.setWidth("-1px");
		vLBLtitle.setHeight("-1px");
		vLBLtitle.setValue("TreeTasker");
		mainLayout.addComponent(vLBLtitle);
		
		// loginLayout
		loginLayout = buildLoginLayout();
		mainLayout.addComponent(loginLayout);
		mainLayout.setComponentAlignment(loginLayout, new Alignment(34));
		
		// loggedLayout
		loggedLayout = buildLoggedLayout();
		mainLayout.addComponent(loggedLayout);
		mainLayout.setExpandRatio(loggedLayout, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildLoginLayout() {
		// common part: create layout
		loginLayout = new HorizontalLayout();
		loginLayout.setImmediate(false);
		loginLayout.setWidth("-1px");
		loginLayout.setHeight("-1px");
		loginLayout.setMargin(false);
		loginLayout.setSpacing(true);
		
		// vBTregister
		vBTregister = new Button();
		vBTregister.setCaption("S'enregistrer");
		vBTregister.setImmediate(true);
		vBTregister.setWidth("-1px");
		vBTregister.setHeight("-1px");
		loginLayout.addComponent(vBTregister);
		loginLayout.setComponentAlignment(vBTregister, new Alignment(48));
		
		// vTFuserNameValue
		vTFuserNameValue = new TextField();
		vTFuserNameValue.setImmediate(false);
		vTFuserNameValue.setWidth("-1px");
		vTFuserNameValue.setHeight("-1px");
		vTFuserNameValue.setInputPrompt("E-mail");
		vTFuserNameValue.setSecret(false);
		loginLayout.addComponent(vTFuserNameValue);
		
		// vTFpasswordValue
		vTFpasswordValue = new PasswordField();
		vTFpasswordValue.setImmediate(false);
		vTFpasswordValue.setWidth("-1px");
		vTFpasswordValue.setHeight("-1px");
		vTFpasswordValue.setInputPrompt("Mot de passe");
		loginLayout.addComponent(vTFpasswordValue);
		
		// vBTlogin
		vBTlogin = new Button();
		vBTlogin.setCaption("Se connecter");
		vBTlogin.setImmediate(true);
		vBTlogin.setWidth("-1px");
		vBTlogin.setHeight("-1px");
		loginLayout.addComponent(vBTlogin);
		
		return loginLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildLoggedLayout() {
		// common part: create layout
		loggedLayout = new HorizontalLayout();
		loggedLayout.setImmediate(false);
		loggedLayout.setWidth("100.0%");
		loggedLayout.setHeight("-1px");
		loggedLayout.setMargin(false);
		
		// vMNBmenu
		vMNBmenu = new MenuBar();
		vMNBmenu.setImmediate(true);
		vMNBmenu.setWidth("-1px");
		vMNBmenu.setHeight("-1px");
		loggedLayout.addComponent(vMNBmenu);
		loggedLayout.setComponentAlignment(vMNBmenu, new Alignment(34));
		
		return loggedLayout;
	}
}
